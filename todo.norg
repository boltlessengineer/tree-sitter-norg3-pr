* (x) range-able detached modifiers
* (x) nestable detached modifiers
* (x) implement `| : |` thing (intersecting modifier)
* (x) detached modifier extensions
* ( ) fix weak/strong carryover tags problem
* ( ) fix parameter tokens to allow all types of punctuations
* ( ) don't return `SOFT_BREAK` on ERROR MODE
* (?) rewrite `scanner.c` to C++. parser error is from `iswpunct`, not C++.
* ( ) prevent accidental segment fault
* (x) neovim crashes on `note.norg` file
* (?) add inline link syntax
* ( ) range-able detached modifier list
* (?) `elseif` tyle syntax for detached modifier list
* (?) `@@code ... @@end` to allow `@end` in verbatim ranged tag
* ( ) move infirm tag and weak carryover tag to paragraph
* ( ) make sure indent vectors are cleared properly
* ( ) OSC8 links ({https://github.com/nvim-neorg/neorg/issues/1318}[neorg#1318])
* (_) refactor extension syntax

  to make all extensions share same rules.

  @code
  *bold*(macro param\ with\ whitespace|second macro)

  e.g. `print("hi")`(lang python)

  * ( |macro param\ with\ whitespace|third macro) heading

  e.g.
  * ( |# A) heading
  @end

  so `*bold*( |# A)` is now valid in syntax, but invalid in semantic

  `*bold*(red)`

  @code
  =red %attached
  .macro-eval color red &attached
  =end
  @end

* (?) refactor link targets

  - Scoped targets
  %% @table
     | Type       | Prefix | Content     |
     |------------|--------|-------------|
     | Heading    | `|* |` | paragraph   |
     | Footnote   | `|^ |` | identifiers |
     | Definition | `|$ |` | identifiers |
     | Magic      | `|# |` | identifiers |
     | Macro Link | `=`    | identifiers |
     | Norg File  | `:`    | file path   |
     @end
  - File path `|/ filepath|`
  - URI target (fallback)

** extendable target is replaced to macro target

   before:

   @code
   {= some text}[a description](macro-name)
   @end

   after:

   @code
   {= macro-name some\ text}[a description]
   @end

   and implementation is:

   @code
   =macro-name param
   ...
   =end
   @end

*** how it works differently from link extensions

    @code
    {= macro1 some\ text}[a description](macro2 param)

    {expanded-link-target}[a description](macro2 param)

    #macro2 param
    @end

** `:` at the end of norg_file target is optional

   - `{:norg/file}` - valid
   - `{:norg/file:}` - valid, prefered by formatter
   - `{: norg/file:}` - valid
   - `{: norg/file :}` - valid
   - `{: norg/file : }` - valid
   - `|{: norg/file\ name : }|` - valid

   `:` at the end is just empty scope.

   As we will never create link target to table cell, it's safe to use `|: |`
   as norg_file target prefix.

   All scope delimiter should be preceded/followed by whitespaces to not
   conflict with link modifiers.

** wikilink as part of norg_file varient

   `{:some_norg_file}` is now wikilink.
   If you mean file in same directory, start with `:./` like
   `{:./sibling_file}`
