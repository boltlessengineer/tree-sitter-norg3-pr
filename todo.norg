- (x) solve not parse `**` as `bold_close`
-- sol1: check from external scanner
-- sol2: remove `prec(1,)` and make conflict case like this: `[$.bold_close, $.punctuation]`
-- sol3: add additional `/\*+/` token for punctuation which has higher precedence than bold_close
- (x) solve case `*bold*word`.
    still same problem, parser keep tries to separate two word as two paragraphs
    it's not a problem when parsing files because we can just add `newline_or_eof` crucial at the end of the paragraph
    but when parsing a string, tree-sitter grammar can't detect the *end of a string*
    hmmm... should I use external scanner for `bold_close` to solve this?
    -- solution!!! use `bold_close` with `prec(2, seq("*", $._bold_word_seg))`
- (x) add link modifier
- (x) add free form attached modifiers
-- (x) sol1: make new `_bold_free_...` and `_bold_free_inline_...`. easy and dirty
-- (-) sol2: set BOLD_FREE state to `true` when external scanner parsed BOLD_FREE_OPEN. hard
- (x) add other attached modifiers
-- (x) test multiple attached modifier
-- (x) abstract those into JS functions
-- (x) add all non verbatim attached modifiers
-- (x) add all verbatim attached modifiers
- ( ) add links/anchors
-- ( ) add tests for links/anchors
-- IDEA: link_description == attached modifier (with higher precedence than punctuation)
- (x) revert all block types
-- (x) nestable modifier
-- (x) rangeable detached modifier
-- (x) delimiting modifier
-- (x) tag
-- (x) test reverted block type grammars
- (x) revert escape sequence


- ( ) remove non_ws. we don't need it. see: branch/new-attached-modifiers
